# Replace your "Quick runtime test" step with this:
- name: Runtime validation test
  run: |
    set -e  # Exit immediately on any error

    echo "🔍 Starting container runtime test..."

    # Try to start the container and capture the container ID
    echo "Starting container..."
    CONTAINER_ID=$(docker run --rm -d --name quick-test -p 8080:8080 user/app:test 2>&1)

    if [ $? -ne 0 ]; then
      echo "❌ Failed to start container"
      echo "Error output: $CONTAINER_ID"
      exit 1
    fi

    echo "✅ Container started with ID: $CONTAINER_ID"

    # Function to cleanup on exit
    cleanup() {
      echo "🧹 Cleaning up..."
      if docker ps -q -f name=quick-test | grep -q .; then
        docker stop quick-test >/dev/null 2>&1 || true
      fi
    }
    trap cleanup EXIT

    # Wait for container to initialize
    echo "⏳ Waiting for container to initialize..."
    sleep 10

    # Check if container is still running
    if ! docker ps -f name=quick-test | grep -q quick-test; then
      echo "❌ Container exited unexpectedly"
      echo "📋 Container logs:"
      docker logs quick-test 2>&1 || echo "No logs available"
      
      # Check exit code
      EXIT_CODE=$(docker inspect quick-test --format='{{.State.ExitCode}}' 2>/dev/null || echo "unknown")
      echo "Exit code: $EXIT_CODE"
      exit 1
    fi

    echo "✅ Container is running"

    # Get and analyze logs
    echo "📋 Checking container logs..."
    LOGS=$(docker logs quick-test 2>&1)

    # Check for critical errors
    if echo "$LOGS" | grep -iE "(fatal|panic|error.*exit|segmentation fault|out of memory|uncaught exception|npm err)"; then
      echo "❌ Critical errors found in logs:"
      echo "$LOGS"
      exit 1
    fi

    # Check for warnings that might indicate problems
    if echo "$LOGS" | grep -iE "(warn|warning)" | head -5; then
      echo "⚠️  Warnings found (not failing build):"
      echo "$LOGS" | grep -iE "(warn|warning)" | head -5
    fi

    echo "✅ No critical errors found in logs"

    # Optional: Test service endpoint
    echo "🌐 Testing service availability..."
    for i in {1..5}; do
      if curl -f -s http://localhost:8080/health >/dev/null 2>&1; then
        echo "✅ Service is responding"
        break
      elif curl -f -s http://localhost:8080/ >/dev/null 2>&1; then
        echo "✅ Service is responding (root endpoint)"
        break
      else
        echo "⏳ Attempt $i/5: Service not responding yet..."
        sleep 5
      fi
      
      if [ $i -eq 5 ]; then
        echo "⚠️  Service not responding to HTTP requests (may be expected)"
        # Don't fail the build for this - service might not have HTTP endpoints
      fi
    done

    echo "✅ Runtime test completed successfully"

# Alternative simpler version if you just want to catch startup failures:
- name: Simple runtime test
  run: |
    echo "Starting container..."

    # Start container and immediately check if it's running
    docker run --rm -d --name quick-test -p 8080:8080 user/app:test

    # Wait a moment
    sleep 5

    # Check if still running
    if docker ps | grep -q quick-test; then
      echo "✅ Container started successfully"
      docker logs quick-test
      docker stop quick-test
    else
      echo "❌ Container failed to start or exited"
      docker logs quick-test 2>&1 || echo "No logs available"
      exit 1
    fi

# Debug version to see what's happening:
- name: Debug container startup
  run: |
    echo "🔍 Debug: Starting container with verbose output..."

    # Start container with more verbose output
    docker run --rm -d --name quick-test -p 8080:8080 user/app:test || {
      echo "❌ Failed to start container"
      echo "📋 Recent Docker events:"
      docker events --since=1m --until=now
      exit 1
    }

    # Show immediate logs
    echo "📋 Initial logs:"
    docker logs quick-test

    # Show container status
    echo "📊 Container status:"
    docker ps -a -f name=quick-test

    # Wait and check again
    sleep 10

    echo "📋 Logs after 10 seconds:"
    docker logs quick-test 2>&1 || echo "No logs available"

    # Final status check
    if docker ps -f name=quick-test | grep -q quick-test; then
      echo "✅ Container is running"
      docker stop quick-test
    else
      echo "❌ Container is not running"
      docker ps -a -f name=quick-test
      exit 1
    fi
