name: Pull Request Validation

on:
  pull_request:
    branches:
      - "**"

jobs:
  build-docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: builder

      - name: Configure AWS Credentials
        id: aws-creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-2
          aws-access-key-id: ${{secrets.ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.SECRET_ACCESS_KEY}}

      - name: Login to ECR
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{secrets.AWS_REGION}}.amazonaws.com
          ecr: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Validate build configuration
        uses: docker/build-push-action@v6
        with:
          call: check
          context: ./builder
          file: ./builder/runner/Dockerfile

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: false
          tags: user/app:latest
          context: ./builder
          file: ./builder/runner/Dockerfile
          platforms: linux/amd64
  runtime-tests:
    runs-on: ubuntu-latest
    needs: build-docker

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: builder

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Modify config for build
        run: |
          cd builder
          # Comment out specific Redis configuration lines
          cd ./runner

          sed -i 's/^  sessionCookiePassword:/  \/\/ sessionCookiePassword:/' config/default.js
          sed -i 's/^  redisHost:/  \/\/ redisHost:/' config/default.js
          sed -i 's/^  redisPort:/  \/\/ redisPort:/' config/default.js
          sed -i 's/^  redisPassword:/  \/\/ redisPassword:/' config/default.js
          sed -i 's/^  redisTls:/  \/\/ redisTls:/' config/default.js

      - name: Build test image
        uses: docker/build-push-action@v4
        with:
          push: false
          load: true
          tags: user/app:test
          context: ./builder
          file: ./builder/runner/Dockerfile
          platforms: linux/amd64

      - name: Run container smoke test
        run: |
          echo "Starting container smoke test..."

          # Start container in detached mode
          docker run -d --name test-container --rm \
            -p 8080:8080 \
            user/app:test

          # Wait for container to start
          echo "Waiting for container to start..."
          sleep 30

          # Check if container is still running (didn't crash immediately)
          if ! docker ps | grep test-container; then
            echo "❌ Container crashed during startup"
            docker logs test-container 2>&1 || true
            exit 1
          fi

          echo "✅ Container started successfully"

      - name: Check container logs for errors
        run: |
          echo "Checking container logs for runtime errors..."

          # Get container logs
          LOGS=$(docker logs test-container 2>&1)

          # Check for common error patterns
          if echo "$LOGS" | grep -i "error\|exception\|fatal\|panic\|failed"; then
            echo "❌ Runtime errors found in logs:"
            echo "$LOGS"
            exit 1
          fi

          echo "✅ No runtime errors found in logs"
